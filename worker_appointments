CREATE OR REPLACE PROCEDURE get_worker_appointments (
    p_worker_id IN NUMBER
) AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------------------------');
    DBMS_OUTPUT.PUT_LINE('| Appt ID | Customer Name | Vehicle         | Service     | Date               | Status |');
    DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------------------------');

    FOR rec IN (
        SELECT a.appointment_id, 
               c.first_name || ' ' || c.last_name AS customer_name, 
               v.make || ' ' || v.model AS vehicle, 
               s.service_name, 
               TO_CHAR(a.appointment_date, 'YYYY-MM-DD HH24:MI') AS appointment_date,
               a.status
        FROM appointment a
        JOIN customer c ON a.customer_id = c.customer_id
        JOIN vehicle v ON a.vehicle_id = v.vehicle_id
        JOIN service s ON a.service_id = s.service_id
        WHERE a.worker_id = p_worker_id
        ORDER BY a.appointment_date
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('| ' || 
            LPAD(rec.appointment_id, 7) || ' | ' ||
            RPAD(rec.customer_name, 13) || ' | ' ||
            RPAD(rec.vehicle, 15) || ' | ' ||
            RPAD(rec.service_name, 10) || ' | ' ||
            RPAD(rec.appointment_date, 19) || ' | ' ||
            RPAD(rec.status, 10) || ' |');
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------------------------');
END;
/

SET SERVEROUTPUT ON;
EXEC get_worker_appointments(1);




--update appointment
CREATE OR REPLACE PROCEDURE update_appointment_status (
    p_appointment_id NUMBER, 
    p_new_status VARCHAR2
) AS
    v_count NUMBER;
BEGIN
    -- Check if the appointment exists
    SELECT COUNT(*) INTO v_count
    FROM appointment
    WHERE appointment_id = p_appointment_id;

    IF v_count = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Error: Appointment ID ' || p_appointment_id || ' does not exist.');
        RETURN;
    END IF;

    -- Update the appointment status
    UPDATE appointment
    SET status = p_new_status
    WHERE appointment_id = p_appointment_id;

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Appointment status updated successfully. Appointment ID: ' || p_appointment_id || ' to status: ' || p_new_status);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
        ROLLBACK;
END;
/
BEGIN
    update_appointment_status(1, 'Completed');
END;
/

